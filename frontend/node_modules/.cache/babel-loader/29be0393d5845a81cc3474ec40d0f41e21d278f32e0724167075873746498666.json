{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import API from \"../services/api\";\n\n// const ShowContacts = () => {\n//   const [contacts, setContacts] = useState([]);\n//   const [form, setForm] = useState({ name: \"\", mobile: \"\", email: \"\" });\n//   const [editingId, setEditingId] = useState(null);\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n\n//   const fetchContacts = async () => {\n//     try {\n//       const { data } = await API.get(\"/contacts\");\n//       setContacts(data);\n//     } catch (error) {\n//       alert(\"Failed to fetch contacts\");\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchContacts();\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       if (editingId) {\n//         await API.put(`/contacts/${editingId}`, form);\n//         alert(\"Contact updated successfully\");\n//       } else {\n//         await API.post(\"/contacts\", form);\n//         alert(\"Contact added successfully\");\n//       }\n//       setForm({ name: \"\", mobile: \"\", email: \"\" });\n//       setEditingId(null);\n//       setIsModalOpen(false);\n//       fetchContacts();\n//     } catch (error) {\n//       alert(\"Failed to save contact\");\n//     }\n//   };\n\n//   const handleEdit = (contact) => {\n//     setForm(contact);\n//     setEditingId(contact._id);\n//     setIsModalOpen(true);\n//   };\n\n//   const handleDelete = async (id) => {\n//     try {\n//       const response = await API.delete(`/contacts/${id}`);\n//       if (response.status === 200) {\n//         alert(\"Contact deleted successfully\");\n//         fetchContacts();\n//       }\n//     } catch (error) {\n//       alert(\"Failed to delete contact\");\n//     }\n//   };\n\n//   const closeModal = () => {\n//     setIsModalOpen(false);\n//     setForm({ name: \"\", mobile: \"\", email: \"\" });\n//     setEditingId(null);\n//   };\n\n//   return (\n//     <div className=\"p-4 lg:p-6\">\n//       <h1 className=\"text-2xl font-bold mb-4\">Contacts</h1>\n\n//       {contacts.length === 0 ? (\n//         <p className=\"text-gray-500\">No contacts added yet</p>\n//       ) : (\n//         <div className=\"max-w-4xl mx-auto\">\n//           {\" \"}\n//           {/* Ensure the list container doesn't stretch */}\n//           <ul className=\"space-y-4\">\n//             {\" \"}\n//             {/* Stack items vertically */}\n//             {contacts.map((contact) => (\n//               <li\n//                 key={contact._id}\n//                 className=\"bg-white p-4 rounded-lg shadow-md flex flex-col hover:bg-gray-100 transition duration-300\"\n//               >\n//                 <p className=\"text-lg font-semibold\">{contact.name}</p>\n//                 <p className=\"text-sm text-gray-600\">{contact.mobile}</p>\n//                 <p className=\"text-sm text-gray-600\">{contact.email}</p>\n//                 <div className=\"mt-4 flex space-x-2\">\n//                   <button\n//                     onClick={() => handleEdit(contact)}\n//                     className=\"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition duration-300\"\n//                   >\n//                     Edit\n//                   </button>\n//                   <button\n//                     onClick={() => handleDelete(contact._id)}\n//                     className=\"bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition duration-300\"\n//                   >\n//                     Delete\n//                   </button>\n//                 </div>\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n\n//       {isModalOpen && (\n//         <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50 px-4\">\n//           <div className=\"bg-white p-6 rounded-lg shadow-lg w-full max-w-md relative\">\n//             <button\n//               className=\"absolute top-2 right-2 text-gray-600 hover:text-gray-900 text-xl font-bold\"\n//               onClick={closeModal}\n//             >\n//               âœ–\n//             </button>\n//             <h2 className=\"text-xl font-semibold mb-4\">\n//               {editingId ? \"Edit\" : \"Add\"} Contact\n//             </h2>\n//             <form onSubmit={handleSubmit} className=\"space-y-4\">\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Name\"\n//                 value={form.name}\n//                 onChange={(e) => setForm({ ...form, name: e.target.value })}\n//                 className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//               />\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Mobile\"\n//                 value={form.mobile}\n//                 onChange={(e) => setForm({ ...form, mobile: e.target.value })}\n//                 className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//               />\n//               <input\n//                 type=\"email\"\n//                 placeholder=\"Email\"\n//                 value={form.email}\n//                 onChange={(e) => setForm({ ...form, email: e.target.value })}\n//                 className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//               />\n//               <button\n//                 type=\"submit\"\n//                 className=\"w-full bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 transition duration-300\"\n//               >\n//                 {editingId ? \"Update\" : \"Add\"} Contact\n//               </button>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ShowContacts;","map":{"version":3,"names":[],"sources":["C:/Users/karan/OneDrive/Desktop/mern-auth-dashboard/frontend/src/components/ShowContacts.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import API from \"../services/api\";\r\n\r\n// const ShowContacts = () => {\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [form, setForm] = useState({ name: \"\", mobile: \"\", email: \"\" });\r\n//   const [editingId, setEditingId] = useState(null);\r\n//   const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n//   const fetchContacts = async () => {\r\n//     try {\r\n//       const { data } = await API.get(\"/contacts\");\r\n//       setContacts(data);\r\n//     } catch (error) {\r\n//       alert(\"Failed to fetch contacts\");\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchContacts();\r\n//   }, []);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//       if (editingId) {\r\n//         await API.put(`/contacts/${editingId}`, form);\r\n//         alert(\"Contact updated successfully\");\r\n//       } else {\r\n//         await API.post(\"/contacts\", form);\r\n//         alert(\"Contact added successfully\");\r\n//       }\r\n//       setForm({ name: \"\", mobile: \"\", email: \"\" });\r\n//       setEditingId(null);\r\n//       setIsModalOpen(false);\r\n//       fetchContacts();\r\n//     } catch (error) {\r\n//       alert(\"Failed to save contact\");\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (contact) => {\r\n//     setForm(contact);\r\n//     setEditingId(contact._id);\r\n//     setIsModalOpen(true);\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       const response = await API.delete(`/contacts/${id}`);\r\n//       if (response.status === 200) {\r\n//         alert(\"Contact deleted successfully\");\r\n//         fetchContacts();\r\n//       }\r\n//     } catch (error) {\r\n//       alert(\"Failed to delete contact\");\r\n//     }\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setIsModalOpen(false);\r\n//     setForm({ name: \"\", mobile: \"\", email: \"\" });\r\n//     setEditingId(null);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-4 lg:p-6\">\r\n//       <h1 className=\"text-2xl font-bold mb-4\">Contacts</h1>\r\n\r\n//       {contacts.length === 0 ? (\r\n//         <p className=\"text-gray-500\">No contacts added yet</p>\r\n//       ) : (\r\n//         <div className=\"max-w-4xl mx-auto\">\r\n//           {\" \"}\r\n//           {/* Ensure the list container doesn't stretch */}\r\n//           <ul className=\"space-y-4\">\r\n//             {\" \"}\r\n//             {/* Stack items vertically */}\r\n//             {contacts.map((contact) => (\r\n//               <li\r\n//                 key={contact._id}\r\n//                 className=\"bg-white p-4 rounded-lg shadow-md flex flex-col hover:bg-gray-100 transition duration-300\"\r\n//               >\r\n//                 <p className=\"text-lg font-semibold\">{contact.name}</p>\r\n//                 <p className=\"text-sm text-gray-600\">{contact.mobile}</p>\r\n//                 <p className=\"text-sm text-gray-600\">{contact.email}</p>\r\n//                 <div className=\"mt-4 flex space-x-2\">\r\n//                   <button\r\n//                     onClick={() => handleEdit(contact)}\r\n//                     className=\"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition duration-300\"\r\n//                   >\r\n//                     Edit\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => handleDelete(contact._id)}\r\n//                     className=\"bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition duration-300\"\r\n//                   >\r\n//                     Delete\r\n//                   </button>\r\n//                 </div>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n//       )}\r\n\r\n//       {isModalOpen && (\r\n//         <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50 px-4\">\r\n//           <div className=\"bg-white p-6 rounded-lg shadow-lg w-full max-w-md relative\">\r\n//             <button\r\n//               className=\"absolute top-2 right-2 text-gray-600 hover:text-gray-900 text-xl font-bold\"\r\n//               onClick={closeModal}\r\n//             >\r\n//               âœ–\r\n//             </button>\r\n//             <h2 className=\"text-xl font-semibold mb-4\">\r\n//               {editingId ? \"Edit\" : \"Add\"} Contact\r\n//             </h2>\r\n//             <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Name\"\r\n//                 value={form.name}\r\n//                 onChange={(e) => setForm({ ...form, name: e.target.value })}\r\n//                 className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n//               />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Mobile\"\r\n//                 value={form.mobile}\r\n//                 onChange={(e) => setForm({ ...form, mobile: e.target.value })}\r\n//                 className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n//               />\r\n//               <input\r\n//                 type=\"email\"\r\n//                 placeholder=\"Email\"\r\n//                 value={form.email}\r\n//                 onChange={(e) => setForm({ ...form, email: e.target.value })}\r\n//                 className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n//               />\r\n//               <button\r\n//                 type=\"submit\"\r\n//                 className=\"w-full bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 transition duration-300\"\r\n//               >\r\n//                 {editingId ? \"Update\" : \"Add\"} Contact\r\n//               </button>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ShowContacts;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}